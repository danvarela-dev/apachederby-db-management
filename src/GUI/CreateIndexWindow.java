/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Image;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.util.Vector;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.Stack;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danie
 */
public class CreateIndexWindow extends javax.swing.JFrame {

    /**
     * Creates new form CreateIndexWindow
     */
    Connection conn;
    DefaultTableModel IND_tableModel;
    DefaultTableModel PK_tableModel;
    DefaultTableModel FK_tableModel;
    
    int cont = 0;
    Stack stack = new Stack();
    String prevTable = "";
    
    public CreateIndexWindow(Connection conn_) {
        initComponents();
        conn = conn_;
        initMyComponents();
    }
    
    public CreateIndexWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Schema_label = new javax.swing.JLabel();
        schemaComboBox = new javax.swing.JComboBox<>();
        IndexName_label = new javax.swing.JLabel();
        IndexName_jtextfield = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        Tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        IND_jTable1 = new javax.swing.JTable();
        Add_btn = new javax.swing.JButton();
        Delete_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        INDTables_ComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        IndexTypes_ComboBox = new javax.swing.JComboBox<>();
        Cancel_btn1 = new javax.swing.JButton();
        OK_btn1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        PKTables_ComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        PK_jTable2 = new javax.swing.JTable();
        PKCancel_btn = new javax.swing.JButton();
        PKOK_btn = new javax.swing.JButton();
        refreshPKTable = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        FKTables_ComboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        FK_jTable3 = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        REFFKTables_ComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        REFFKColumn_ComboBox = new javax.swing.JComboBox<>();
        FKCancel_btn = new javax.swing.JButton();
        FKOK_btn = new javax.swing.JButton();
        refresh_btn = new javax.swing.JButton();
        refreshFKTable = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Schema_label.setText("Schema:");

        schemaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        IndexName_label.setText("Name:");

        jPanel1.setMaximumSize(new java.awt.Dimension(34000, 34000));

        IND_jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Expresion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        IND_jTable1.setColumnSelectionAllowed(true);
        IND_jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(IND_jTable1);
        IND_jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (IND_jTable1.getColumnModel().getColumnCount() > 0) {
            IND_jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        Add_btn.setText("Add");
        Add_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Add_btnMouseClicked(evt);
            }
        });

        Delete_btn.setText("Delete");
        Delete_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Delete_btnMouseClicked(evt);
            }
        });

        jLabel1.setText("Table:");

        jLabel2.setText("Index Type:");

        IndexTypes_ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<NOT SET>", "UNIQUE", "COMPOSITE" }));

        Cancel_btn1.setText("Cancel");
        Cancel_btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Cancel_btn1MouseClicked(evt);
            }
        });

        OK_btn1.setText("OK");
        OK_btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OK_btn1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Add_btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Delete_btn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(INDTables_ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(IndexTypes_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(OK_btn1)
                        .addGap(18, 18, 18)
                        .addComponent(Cancel_btn1)
                        .addGap(30, 30, 30))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(INDTables_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(IndexTypes_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Add_btn)
                            .addComponent(Delete_btn))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OK_btn1)
                            .addComponent(Cancel_btn1))
                        .addContainerGap())))
        );

        Tabs.addTab("Index", jPanel1);

        jLabel3.setText("Table:");

        PK_jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Expresion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PK_jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(PK_jTable2);
        PK_jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (PK_jTable2.getColumnModel().getColumnCount() > 0) {
            PK_jTable2.getColumnModel().getColumn(0).setResizable(false);
        }

        PKCancel_btn.setText("Cancel");
        PKCancel_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PKCancel_btnMouseClicked(evt);
            }
        });

        PKOK_btn.setText("OK");
        PKOK_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PKOK_btnMouseClicked(evt);
            }
        });

        refreshPKTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/resources/refresh.png"))); // NOI18N
        refreshPKTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshPKTableMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(PKTables_ComboBox, 0, 577, Short.MAX_VALUE)
                .addGap(171, 171, 171))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(refreshPKTable)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PKOK_btn)
                .addGap(18, 18, 18)
                .addComponent(PKCancel_btn)
                .addGap(23, 23, 23))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(PKTables_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(refreshPKTable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PKOK_btn)
                    .addComponent(PKCancel_btn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Tabs.addTab("Primary Keys", jPanel2);

        jLabel4.setText("Table:");

        FK_jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Expresion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FK_jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(FK_jTable3);
        FK_jTable3.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (FK_jTable3.getColumnModel().getColumnCount() > 0) {
            FK_jTable3.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel5.setText("Referenced Constraint");

        jLabel6.setText("Table:");

        jLabel7.setText("Column");

        FKCancel_btn.setText("Cancel");
        FKCancel_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FKCancel_btnMouseClicked(evt);
            }
        });

        FKOK_btn.setText("OK");
        FKOK_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FKOK_btnMouseClicked(evt);
            }
        });

        refresh_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/resources/refresh.png"))); // NOI18N
        refresh_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_btnMouseClicked(evt);
            }
        });

        refreshFKTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/resources/refresh.png"))); // NOI18N
        refreshFKTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshFKTableMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(REFFKTables_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(FKOK_btn)
                                .addGap(18, 18, 18)
                                .addComponent(FKCancel_btn))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(REFFKColumn_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refresh_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(458, 458, 458)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(FKTables_ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(109, 109, 109)
                        .addComponent(refreshFKTable, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(FKTables_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(refreshFKTable, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(REFFKTables_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(REFFKColumn_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refresh_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FKOK_btn)
                    .addComponent(FKCancel_btn))
                .addGap(13, 13, 13))
        );

        Tabs.addTab("Foreign Keys", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Tabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(IndexName_label)
                            .addComponent(Schema_label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(schemaComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(IndexName_jtextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Schema_label)
                    .addComponent(schemaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IndexName_label)
                    .addComponent(IndexName_jtextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Tabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Vector getColumnNamesFromTable(String chosenTable) {
        
        prevTable = chosenTable;
        Vector<Object> row = new Vector<>();
        
        try {
            Statement st = this.conn.createStatement();
            
            String SQLQuery = "SELECT * FROM " + chosenTable;
            ResultSetMetaData resMD = st.executeQuery(SQLQuery).getMetaData();
            
            for (int i = 1; i <= resMD.getColumnCount(); i++) {
                row.add(resMD.getColumnName(i));
            }
            
        } catch (Exception e) {
            popupError(e);
        }
        return row;
    }

    private void Add_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Add_btnMouseClicked
        
        Vector<String> Columns = getColumnNamesFromTable(this.INDTables_ComboBox.getSelectedItem().toString());
        if (cont++ < Columns.size()) {
            if (stack.empty()) {
                stack.addAll(Columns);
            }
        }
        IND_tableModel.addRow(new Object[]{stack.pop()});

    }//GEN-LAST:event_Add_btnMouseClicked

    private void Delete_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_btnMouseClicked
        
        int selectedRow = IND_jTable1.getSelectedRow();
        System.out.println(selectedRow);
        
        if (selectedRow >= 0) {
            IND_tableModel.removeRow(selectedRow);
            cont--;
        } else {
            JOptionPane.showMessageDialog(null, "Choose Row to Delete");
        }

    }//GEN-LAST:event_Delete_btnMouseClicked

    private void Cancel_btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cancel_btn1MouseClicked
        this.dispose();
    }//GEN-LAST:event_Cancel_btn1MouseClicked

    private void OK_btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OK_btn1MouseClicked
        
        Vector<Vector> tableData = IND_tableModel.getDataVector();
        
        try {
            String SQL = "";
            if (IndexTypes_ComboBox.getSelectedItem().equals("UNIQUE")) {
                SQL = "CREATE UNIQUE";
            } else if (IndexTypes_ComboBox.getSelectedItem().equals("COMPOSITE")) {
                SQL = "CREATE COMPOSITE";
            } else {
                SQL = "CREATE";
            }
            
            SQL += " INDEX " + this.IndexName_jtextfield.getText() + " ON " + this.schemaComboBox.getSelectedItem().toString() + "." + this.INDTables_ComboBox.getSelectedItem().toString()
                    + "(";
            
            for (int i = 0; i < tableData.size(); i++) {
                SQL += tableData.get(i).get(0);
                if (i < tableData.size() - 1) {
                    SQL += ",";
                }
            }
            SQL += ")";
            
            System.out.println(SQL);
            Statement st = this.conn.createStatement();
            
            st.execute(SQL);
            
            this.dispose();
            
        } catch (Exception e) {
            popupError(e);
        }

    }//GEN-LAST:event_OK_btn1MouseClicked

    private void FKCancel_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FKCancel_btnMouseClicked
        this.dispose();
    }//GEN-LAST:event_FKCancel_btnMouseClicked

    private void FKOK_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FKOK_btnMouseClicked
        Vector<Vector> tableData = this.FK_tableModel.getDataVector();
        int chosenRow = this.FK_jTable3.getSelectedRow();
        String SQL = "";
        try {
            SQL = "ALTER TABLE " + this.schemaComboBox.getSelectedItem().toString() + "."
                    + this.FKTables_ComboBox.getSelectedItem().toString() + " ADD FOREIGN KEY("
                    + tableData.get(chosenRow).get(0) + ") REFERENCES "
                    + this.conn.getSchema() + "." + this.REFFKTables_ComboBox.getSelectedItem().toString()
                    + "(" + this.REFFKColumn_ComboBox.getSelectedItem().toString() + ")";
            
            System.out.println(SQL);
            Statement st = this.conn.createStatement();
            st.executeUpdate(SQL);
            this.dispose();
            
        } catch (Exception e) {
            popupError(e);
        }
        

    }//GEN-LAST:event_FKOK_btnMouseClicked

    private void refresh_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_btnMouseClicked
        // TODO add your handling code here:
        this.REFFKColumn_ComboBox.removeAllItems();
        try {
            ResultSet res_RefColumns = conn.createStatement().executeQuery("SELECT * FROM " + this.REFFKTables_ComboBox.getSelectedItem().toString());
            ResultSetMetaData resMD = res_RefColumns.getMetaData();
            
            for (int i = 0; i < resMD.getColumnCount(); i++) {
                this.REFFKColumn_ComboBox.addItem(resMD.getColumnName(i + 1));
            }
        } catch (Exception e) {
            popupError(e);
        }

//        this.REFFKColumn_ComboBox.removeAllItems();
//        try {
//            ResultSet resPK = conn.getMetaData().getPrimaryKeys(conn.getCatalog(), conn.getSchema(), this.REFFKTables_ComboBox.getSelectedItem().toString());
//
//            if (resPK.next() == false) {
//                this.REFFKColumn_ComboBox.addItem("No Contraints");
//            }
//            do {
//                this.REFFKColumn_ComboBox.addItem(resPK.getString("COLUMN_NAME"));
//            } while (resPK.next());
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Error: " + e.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_refresh_btnMouseClicked
    
    public void popupError(Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        
    }
    

    private void refreshFKTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshFKTableMouseClicked
        this.FK_tableModel.setRowCount(0);
        try {
            ResultSet res_RefColumns = conn.createStatement().executeQuery("SELECT * FROM " + this.FKTables_ComboBox.getSelectedItem().toString());
            ResultSetMetaData resMD = res_RefColumns.getMetaData();
            
            for (int i = 0; i < resMD.getColumnCount(); i++) {
                this.FK_tableModel.addRow(new Object[]{resMD.getColumnName(i + 1)});
            }
        } catch (Exception e) {
            popupError(e);
        }

    }//GEN-LAST:event_refreshFKTableMouseClicked

    private void refreshPKTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshPKTableMouseClicked
        this.PK_tableModel.setRowCount(0);
        
        try {
            ResultSet res = conn.createStatement().executeQuery("SELECT * FROM " + this.PKTables_ComboBox.getSelectedItem().toString());
            ResultSetMetaData resMD = res.getMetaData();
            
            for (int i = 0; i < resMD.getColumnCount(); i++) {
                this.PK_tableModel.addRow(new Object[]{resMD.getColumnName(i + 1)});
            }
        } catch (Exception e) {
            popupError(e);
        }
    }//GEN-LAST:event_refreshPKTableMouseClicked

    private void PKOK_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PKOK_btnMouseClicked
        
        int chosenRow = this.PK_jTable2.getSelectedRow();
        try {
            String SQL = "ALTER TABLE " + this.schemaComboBox.getSelectedItem().toString() + "." + this.PKTables_ComboBox.getSelectedItem().toString() + " ADD CONSTRAINT "
                    + this.IndexName_jtextfield.getText()
                    + " PRIMARY KEY(" + this.PK_jTable2.getColumnName(chosenRow) + ")";
            
            System.out.println(SQL);
            
            Statement st = this.conn.createStatement();
            st.executeUpdate(SQL);
            this.dispose();
            
        } catch (Exception e) {
            popupError(e);
        }
    }//GEN-LAST:event_PKOK_btnMouseClicked

    private void PKCancel_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PKCancel_btnMouseClicked
        this.dispose();
    }//GEN-LAST:event_PKCancel_btnMouseClicked
    
    public void initMyComponents() {
        
        IND_tableModel = (DefaultTableModel) IND_jTable1.getModel();
        PK_tableModel = (DefaultTableModel) PK_jTable2.getModel();
        FK_tableModel = (DefaultTableModel) FK_jTable3.getModel();
        
        try {
            
            String schema = conn.getSchema();
            schemaComboBox.removeAllItems();
            schemaComboBox.addItem(schema);
            
            Statement st = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            String SQLQuery = "SELECT S.tablename FROM SYS.SYSTABLES S INNER JOIN SYS.SYSSCHEMAS SCH"
                    + " ON S.SCHEMAID = SCH.SCHEMAID and SCH.SCHEMANAME = '" + schema + "' WHERE S.TABLETYPE = 'T'";
            
            ResultSet res = st.executeQuery(SQLQuery);
            
            if (res.next() == false) {
                INDTables_ComboBox.addItem("No Tables");
                PKTables_ComboBox.addItem("No Tables");
                FKTables_ComboBox.addItem("No Tables");
                REFFKTables_ComboBox.addItem("No Tables");
            }
            
            res.beforeFirst();
            
            INDTables_ComboBox.removeAllItems();
            PKTables_ComboBox.removeAllItems();
            FKTables_ComboBox.removeAllItems();
            REFFKTables_ComboBox.removeAllItems();
            while (res.next()) {
                INDTables_ComboBox.addItem(res.getString(1));
                PKTables_ComboBox.addItem(res.getString(1));
                FKTables_ComboBox.addItem(res.getString(1));
                REFFKTables_ComboBox.addItem(res.getString(1));
            }
            
            ResultSet res_RefColumns = conn.createStatement().executeQuery("SELECT * FROM " + this.REFFKTables_ComboBox.getSelectedItem().toString());
            ResultSetMetaData resMD = res_RefColumns.getMetaData();
            
            for (int i = 0; i < resMD.getColumnCount(); i++) {
                this.REFFKColumn_ComboBox.addItem(resMD.getColumnName(i + 1));
            }
            
            ResultSet res2 = conn.createStatement().executeQuery("SELECT * FROM " + this.PKTables_ComboBox.getSelectedItem().toString());
            ResultSetMetaData res2MD = res2.getMetaData();  
            
            for (int i = 0; i < res2MD.getColumnCount(); i++) {
                this.PK_tableModel.addRow(new Object[]{res2MD.getColumnName(i + 1)});
            }
            
        } catch (Exception e) {
            popupError(e);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateIndexWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateIndexWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateIndexWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateIndexWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_btn;
    private javax.swing.JButton Cancel_btn1;
    private javax.swing.JButton Delete_btn;
    private javax.swing.JButton FKCancel_btn;
    private javax.swing.JButton FKOK_btn;
    private javax.swing.JComboBox<String> FKTables_ComboBox;
    private javax.swing.JTable FK_jTable3;
    private javax.swing.JComboBox<String> INDTables_ComboBox;
    private javax.swing.JTable IND_jTable1;
    private javax.swing.JTextField IndexName_jtextfield;
    private javax.swing.JLabel IndexName_label;
    private javax.swing.JComboBox<String> IndexTypes_ComboBox;
    private javax.swing.JButton OK_btn1;
    private javax.swing.JButton PKCancel_btn;
    private javax.swing.JButton PKOK_btn;
    private javax.swing.JComboBox<String> PKTables_ComboBox;
    private javax.swing.JTable PK_jTable2;
    private javax.swing.JComboBox<String> REFFKColumn_ComboBox;
    private javax.swing.JComboBox<String> REFFKTables_ComboBox;
    private javax.swing.JLabel Schema_label;
    private javax.swing.JTabbedPane Tabs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton refreshFKTable;
    private javax.swing.JButton refreshPKTable;
    private javax.swing.JButton refresh_btn;
    private javax.swing.JComboBox<String> schemaComboBox;
    // End of variables declaration//GEN-END:variables
}
